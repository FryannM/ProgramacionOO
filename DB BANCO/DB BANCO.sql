
--ELIMINAR TABLAS PARA UNA EJECUCIï¿½N 

DROP TABLE USUARIOS CASCADE CONSTRAINTS;
DROP TABLE BC_BANCOS CASCADE CONSTRAINTS;
DROP TABLE BC_CLIENTES CASCADE CONSTRAINTS;
DROP TABLE BC_CUENTAS CASCADE CONSTRAINTS;
DROP TABLE BC_DOC_BANCARIOS CASCADE CONSTRAINTS;
DROP TABLE BC_MOVIMIENTOS CASCADE CONSTRAINTS;
DROP TABLE BC_SUCURSALES CASCADE CONSTRAINTS;
DROP TABLE BC_TIPO_DOC_BANCARIOS CASCADE CONSTRAINTS;
DROP TABLE BC_TITULARES_CUENTAS CASCADE CONSTRAINTS;

--Un banco tienen puede tener 0 o muchas sucursales
--Una sucursal puede tiene 1 o mas clientes
--Un cliente puede tener 1 o mas cuenta en un banco y esta asignado a una sucursal

---//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CREATE TABLE USUARIOS (
ID_USUARIO NUMBER NOT NULL,
USUARIO VARCHAR2(20) NOT NULL,
CONTRASENA VARCHAR2(20) NOT NULL,
ESTADO VARCHAR(1) NOT NULL,
CONSTRAINT PK_ID_USUARIO PRIMARY KEY (ID_USUARIO),
CONSTRAINT CK_ESTADO_USUARIO CHECK (ESTADO IN('A','I'))
);
---//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

CREATE TABLE BC_BANCOS (
ID_BANCO NUMBER(20) NOT NULL,
CODIGO VARCHAR2(30)  UNIQUE NOT NULL,
NOMBRE VARCHAR(50) NOT NULL,
DIRECCION VARCHAR2(100) not null,  
RNC VARCHAR2(30) NOT NULL,
CONSTRAINT PK_BANCOS PRIMARY KEY (ID_BANCO)
);
---//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

CREATE TABLE BC_SUCURSALES(
ID_SUCURSAL NUMBER(20) NOT NULL,
ID_BANCO NUMBER(20) NOT NULL,
CODIGO VARCHAR2(30) UNIQUE  NOT NULL,
NOMBRE VARCHAR2(50) NOT NULL,
DIRECCION VARCHAR2(100),
TELEFONO VARCHAR(13),
CORREO NVARCHAR2(50),
CONSTRAINT PK_SUCURSALES PRIMARY KEY (ID_SUCURSAL,ID_BANCO)
);
ALTER TABLE BC_SUCURSALES ADD CONSTRAINT FK_BANCO_SUCURSAL 
FOREIGN KEY (ID_BANCO)REFERENCES BC_BANCOS(ID_BANCO);

---//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

CREATE TABLE BC_CUENTAS(
ID_CUENTA NUMBER(20) NOT NULL,
CODIGO VARCHAR2(50) UNIQUE NOT NULL,
ESTADO CHAR(1) NOT NULL,
BALANCE_DB NUMBER(10,2) NOT NULL,
BALANCE_CR NUMBER(10,2) NOT NULL,
CONSTRAINT PK_CUENTAS PRIMARY KEY (ID_CUENTA),
CONSTRAINT CK_ESTADO_CUENTAS CHECK (ESTADO IN('A','I'))
);

---//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

CREATE TABLE BC_CLIENTES(
ID_CLIENTE NUMBER(20) NOT NULL,
TIPO_DOCUMENTO VARCHAR2(30),
NUM_DOCUMENTO NUMBER NOT NULL,
NOMBRE VARCHAR(50) NOT NULL,
ESTADO VARCHAR(1) NOT NULL,
CONSTRAINT BC_CLIENTES_PK PRIMARY KEY (ID_CLIENTE),
CONSTRAINT CK_ESTADO_CLIENTES CHECK (ESTADO IN('A','I'))
);
---//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

CREATE TABLE BC_TIPO_DOC_BANCARIOS(
ID_TIPO_DOC_BANCARIO NUMBER(20) NOT NULL,
CODIGO VARCHAR2(50) UNIQUE NOT NULL,
NOMBRE VARCHAR(50),
ORIGEN CHAR(1) NOT NULL,
CONSTRAINT PK_TIPO_DOC_BANCARIOS PRIMARY KEY (ID_TIPO_DOC_BANCARIO)
);
ALTER TABLE BC_TIPO_DOC_BANCARIOS
ADD CONSTRAINT CK_ORIGEN CHECK(ORIGEN IN ('D','C'));

--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

CREATE TABLE BC_DOC_BANCARIOS(
ID_DOC_BANCARIO NUMBER(20) NOT NULL,
ID_TIPO_DOC_BANCARIO NUMBER(20) NOT NULL,
ID_CUENTA NUMBER(20) NOT NULL,
ID_CLIENTE NUMBER(20) NOT NULL,
ID_BANCO NUMBER(20) UNIQUE NOT NULL,-- TODOS LOS DOCUMENTOS BANCARIOS PUEDEN TENER SOLO UN BANCO
IMPORTE NUMBER NOT NULL,
FECHA DEFAULT SYSDATE NOT NULL ,
CONSTRAINT PK_DOC_BANCARIOS PRIMARY KEY (ID_DOC_BANCARIO,ID_TIPO_DOC_BANCARIO,ID_BANCO,ID_CUENTA,ID_CLIENTE)
);

ALTER TABLE  BC_DOC_BANCARIOS ADD( 
CONSTRAINT FK_BANCO FOREIGN KEY (ID_BANCO)REFERENCES BC_BANCOS(ID_BANCO),
CONSTRAINT FK_CUENTA FOREIGN KEY (ID_CUENTA)REFERENCES BC_CUENTAS(ID_CUENTA),
CONSTRAINT FK_CLIENTE FOREIGN KEY (ID_CLIENTE)REFERENCES BC_CLIENTES(ID_CLIENTE),
CONSTRAINT FK_TIPO_BANCARIO FOREIGN KEY (ID_TIPO_DOC_BANCARIO) REFERENCES BC_TIPO_DOC_BANCARIOS(ID_TIPO_DOC_BANCARIO)
);

---//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

CREATE TABLE BC_TITULARES_CUENTAS(
ID_TITULAR_CUENTA NUMBER(10) NOT NULL,
ID_CUENTA NUMBER(20) NOT NULL,
ID_CLIENTE NUMBER(20) NOT NULL, 
CONSTRAINT BC_TITULARES_CUENTA_PK PRIMARY KEY (ID_CUENTA,ID_CLIENTE)
);
ALTER TABLE BC_TITULARES_CUENTAS ADD (
CONSTRAINT FK_BC_CLIENTES FOREIGN KEY (ID_CLIENTE) REFERENCES BC_CLIENTES(ID_CLIENTE),
CONSTRAINT FK_BC_CUENTAS FOREIGN KEY (ID_CUENTA) REFERENCES  BC_CUENTAS(ID_CUENTA)
);
--///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

CREATE TABLE BC_MOVIMIENTOS(
ID_BC_MOVIMIENTO NUMBER(20) NOT NULL,
TIPO_MOVIMIENTO VARCHAR2(20) NOT NULL,--DEPOSITO, TRANSFERENCIA, NOTA DE CREDITO, NOTA DE DEBITO, ETC.
ID_BANCO NUMBER(20) NOT NULL,--UN BANCO PUEDE REALIZAR VARIOS MOVIMIENTOS 
ID_CUENTA NUMBER(20),--UN MOVIMENTO SE PUEDE REALIZAR SIN UNA CUENTA BANCARIA 
ID_CLIENTE  NUMBER(20) NOT NULL,-- UN MOVIMIENTO PUEDE SER REALIZADO POR VARIOS CLIENTES
MONTO NUMBER (6,2) NOT NULL,-- MONTO TRANSFERIDO, MONTO DEPOSITADO, NOTA DE DEBITO O CREDITO
FECHA DEFAULT SYSDATE NOT NULL, --FECHA DEL MOVIMIENTO
CONSTRAINT PK_BC_MOVIMIENTOS PRIMARY KEY(ID_BC_MOVIMIENTO)
);
ALTER TABLE BC_MOVIMIENTOS ADD(
CONSTRAINT FK_BANCO_MOVIMIENTO FOREIGN KEY (ID_BANCO) REFERENCES BC_BANCOS(ID_BANCO),
CONSTRAINT FK_CLIENTES_MOVIMIENTO FOREIGN KEY (ID_CLIENTE) REFERENCES BC_CLIENTES(ID_CLIENTE),
CONSTRAINT FK_CUENTAS_MOVIMIENTO FOREIGN KEY (ID_CUENTA) REFERENCES BC_CUENTAS(ID_CUENTA)
);
