--Un banco tienen puede tener 0 o muchas sucursales
--Una sucursal puede tiene 1 o mas clientes
--Un cliente puede tener 1 o mas cuenta en un banco y esta asignado a una sucursal

---//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CREATE TABLE USUARIOS (
ID_USUARIO NUMBER NOT NULL,
USUARIO VARCHAR2(20) NOT NULL,
CONTRASEÑA VARCHAR2(20) NOT NULL,
ESTADO VARCHAR(1) NOT NULL,
CONSTRAINT PK_ID_USUARIO PRIMARY KEY (ID_USUARIO),
CONSTRAINT CK_ESTADO_USUARIO CHECK (ESTADO IN('A','I'))
);


CREATE SEQUENCE  SEQ_USUARIOS
MINVALUE 0 --VALOR MINIMO
START WITH 1--INICIA EN 1
INCREMENT BY 1--SE INCREMENTA EN 1
CACHE 20--GUARDA 20 VALORES EN CACHE PARA MEJOR RENDIMIENTO DE CREACION
;


CREATE OR REPLACE TRIGGER TG_USUARIOS

BEFORE INSERT  --ANTES DE INSERTAR UN REGISTRO EN USUARIO POR REGISTRO
ON USUARIOS 
FOR EACH ROW

BEGIN 

 SELECT SEQ_USUARIOS.NEXTVAL --SELECIONAR LA SECUENCIA Y INTRODUCIR UN NUEVO VALOR AL ID
 INTO :NEW.ID_USUARIO
 FROM DUAL; --TABLA TEMPORAL DUAL
 
END; 
---//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

CREATE TABLE BC_BANCOS (
ID_BANCO NUMBER(20) NOT NULL,
CODIGO VARCHAR2(30) NOT NULL,
NOMBRE VARCHAR(50) NOT NULL,
DIRECCION VARCHAR2(100),  
RNC VARCHAR2(30) NOT NULL,
CONSTRAINT PK_BANCOS PRIMARY KEY (ID_BANCO)
);

CREATE SEQUENCE  SEQ_BC_BANCOS
MINVALUE 0 --VALOR MINIMO
START WITH 1--INICIA EN 1
INCREMENT BY 1--SE INCREMENTA EN 1
CACHE 20--GUARDA 20 VALORES EN CACHE PARA MEJOR RENDIMIENTO DE CREACION
;

create or replace TRIGGER TG_BC_BANCOS

BEFORE INSERT  --ANTES DE INSERTAR UN REGISTRO EN USUARIO POR REGISTRO
ON BC_BANCOS 
FOR EACH ROW

BEGIN 

 SELECT SEQ_BC_BANCOS.NEXTVAL --SELECIONAR LA SECUENCIA Y INTRODUCIR UN NUEVO VALOR AL ID
 INTO :NEW.ID_BANCO
 FROM DUAL; --TABLA TEMPORAL DUAL

END;

---//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

CREATE TABLE BC_SUCURSALES(
ID_SUCURSAL NUMBER(20) NOT NULL,
ID_BANCO NUMBER(20) NOT NULL,
CODIGO VARCHAR(30) NOT NULL,
NOMBRE VARCHAR2(50) NOT NULL,
DIRECCION VARCHAR2(100),
TELEFONO VARCHAR(12),
CORREO NVARCHAR2(50),
CONSTRAINT PK_SUCURSALES PRIMARY KEY (ID_SUCURSAL,ID_BANCO)
);
ALTER TABLE BC_SUCURSALES ADD CONSTRAINT FK_BANCO_SUCURSAL 
FOREIGN KEY (ID_BANCO)REFERENCES BC_BANCOS(ID_BANCO);


CREATE SEQUENCE  SEQ_BC_SUCURSALES
MINVALUE 0 --VALOR MINIMO
START WITH 1--INICIA EN 1
INCREMENT BY 1--SE INCREMENTA EN 1
CACHE 20--GUARDA 20 VALORES EN CACHE PARA MEJOR RENDIMIENTO DE CREACION
;

create or replace TRIGGER TG_BC_SUCURSALES

BEFORE INSERT  --ANTES DE INSERTAR UN REGISTRO EN USUARIO POR REGISTRO
ON BC_SUCURSALES
FOR EACH ROW

BEGIN 

 SELECT SEQ_BC_SUCURSALES.NEXTVAL --SELECIONAR LA SECUENCIA Y INTRODUCIR UN NUEVO VALOR AL ID
 INTO :NEW.ID_SUCURSAL
 FROM DUAL; --TABLA TEMPORAL DUAL

END;

---//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

CREATE TABLE BC_CUENTAS(
ID_CUENTA NUMBER(20) NOT NULL,
CODIGO VARCHAR(50)NOT NULL,
ESTADO CHAR(1) NOT NULL,
BALANCE_DB NUMBER(6,2) NOT NULL,
BALANCE_CR NUMBER(6,2) NOT NULL,
CONSTRAINT PK_CUENTAS PRIMARY KEY (ID_CUENTA),
CONSTRAINT CK_ESTADO_CUENTAS CHECK (ESTADO IN('A','I'))
);

CREATE SEQUENCE  SEQ_BC_CUENTAS
MINVALUE 0 --VALOR MINIMO
START WITH 1--INICIA EN 1
INCREMENT BY 1--SE INCREMENTA EN 1
CACHE 20--GUARDA 20 VALORES EN CACHE PARA MEJOR RENDIMIENTO DE CREACION
;

CREATE OR REPLACE TRIGGER TG_BC_CUENTAS

BEFORE INSERT  --ANTES DE INSERTAR UN REGISTRO EN USUARIO POR REGISTRO
ON BC_CUENTAS
FOR EACH ROW

BEGIN 

 SELECT SEQ_BC_CUENTAS.NEXTVAL --SELECIONAR LA SECUENCIA Y INTRODUCIR UN NUEVO VALOR AL ID
 INTO :NEW.ID_CUENTA
 FROM DUAL; --TABLA TEMPORAL DUAL

END;
---//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

CREATE TABLE BC_CLIENTES(
ID_CLIENTE NUMBER(20) NOT NULL,
TIPO_DOCUMENTO VARCHAR2(30),
NUM_DOCUMENTO NUMBER NOT NULL,
NOMBRE VARCHAR(50) NOT NULL,
ESTADO VARCHAR(1) NOT NULL,
CONSTRAINT BC_CLIENTES_PK PRIMARY KEY (ID_CLIENTE),
CONSTRAINT CK_ESTADO_CLIENTES CHECK (ESTADO IN('A','I'))
);

CREATE SEQUENCE  SEQ_BC_CLIENTES
MINVALUE 0 --VALOR MINIMO
START WITH 1--INICIA EN 1
INCREMENT BY 1--SE INCREMENTA EN 1
CACHE 20--GUARDA 20 VALORES EN CACHE PARA MEJOR RENDIMIENTO DE CREACION
;

CREATE OR REPLACE TRIGGER TG_BC_CLIENTES

BEFORE INSERT  --ANTES DE INSERTAR UN REGISTRO EN USUARIO POR REGISTRO
ON BC_CLIENTES 
FOR EACH ROW

BEGIN 

 SELECT SEQ_BC_CLIENTES.NEXTVAL --SELECIONAR LA SECUENCIA Y INTRODUCIR UN NUEVO VALOR AL ID
 INTO :NEW.ID_CLIENTE
 FROM DUAL; --TABLA TEMPORAL DUAL

END;

---//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

CREATE TABLE BC_TIPO_DOC_BANCARIOS(
ID_TIPO_DOC_BANCARIO NUMBER(20) NOT NULL,
CODIGO VARCHAR(50) NOT NULL,
NOMBRE VARCHAR(50),
ORIGEN CHAR(1) NOT NULL,
CONSTRAINT PK_TIPO_DOC_BANCARIOS PRIMARY KEY (ID_TIPO_DOC_BANCARIO)
);
ALTER TABLE BC_TIPO_DOC_BANCARIOS
ADD CONSTRAINT CK_ORIGEN CHECK(ORIGEN IN ('D','C'));

CREATE SEQUENCE  SEQ_TIPO_DOC_BANCARIOS
MINVALUE 0 --VALOR MINIMO
START WITH 1--INICIA EN 1
INCREMENT BY 1--SE INCREMENTA EN 1
CACHE 20--GUARDA 20 VALORES EN CACHE PARA MEJOR RENDIMIENTO DE CREACION
;

create or replace TRIGGER TG_BC_TIPO_DOC_BANCARIOS

BEFORE INSERT  --ANTES DE INSERTAR UN REGISTRO EN USUARIO POR REGISTRO
ON BC_TIPO_DOC_BANCARIOS 
FOR EACH ROW

BEGIN 

 SELECT SEQ_TIPO_DOC_BANCARIOS.NEXTVAL --SELECIONAR LA SECUENCIA Y INTRODUCIR UN NUEVO VALOR AL ID
 INTO :NEW.ID_TIPO_DOC_BANCARIO
 FROM DUAL; --TABLA TEMPORAL DUAL

END;

---//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

CREATE TABLE BC_DOC_BANCARIOS(
ID_DOC_BANCARIO NUMBER(20) NOT NULL,
ID_TIPO_DOC_BANCARIO NUMBER(20) NOT NULL,
ID_BANCO NUMBER(20) NOT NULL,
ID_CUENTA NUMBER(20) NOT NULL,
ID_CLIENTE NUMBER(20) NOT NULL,
IMPORTE NUMBER NOT NULL,
FECHA DATE NOT NULL ,
CONSTRAINT PK_DOC_BANCARIOS PRIMARY KEY (ID_DOC_BANCARIO,ID_TIPO_DOC_BANCARIO,ID_BANCO,ID_CUENTA,ID_CLIENTE)
);

CREATE SEQUENCE  SEQ_DOC_BANCARIOS
MINVALUE 0 --VALOR MINIMO
START WITH 1--INICIA EN 1
INCREMENT BY 1--SE INCREMENTA EN 1
CACHE 20--GUARDA 20 VALORES EN CACHE PARA MEJOR RENDIMIENTO DE CREACION
;


ALTER TABLE  BC_DOC_BANCARIOS ADD( 
CONSTRAINT FK_BANCO FOREIGN KEY (ID_BANCO)REFERENCES BC_BANCOS(ID_BANCO),
CONSTRAINT FK_CUENTA FOREIGN KEY (ID_CUENTA)REFERENCES BC_CUENTAS(ID_CUENTA),
CONSTRAINT FK_CLIENTE FOREIGN KEY (ID_CLIENTE)REFERENCES BC_CLIENTES(ID_CLIENTE),
CONSTRAINT FK_TIPO_BANCARIO FOREIGN KEY (ID_TIPO_DOC_BANCARIO) REFERENCES BC_TIPO_DOC_BANCARIOS(ID_TIPO_DOC_BANCARIO)
);

CREATE OR REPLACE TRIGGER TG_BC_DOC_BANCARIOS

BEFORE INSERT  --ANTES DE INSERTAR UN REGISTRO EN USUARIO POR REGISTRO
ON BC_TIPO_DOC_BANCARIOS 
FOR EACH ROW

BEGIN 

 SELECT SEQ_DOC_BANCARIOS.NEXTVAL --SELECIONAR LA SECUENCIA Y INTRODUCIR UN NUEVO VALOR AL ID
 INTO :NEW.ID_TIPO_DOC_BANCARIO
 FROM DUAL; --TABLA TEMPORAL DUAL

END;

---//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

CREATE TABLE BC_TITULARES_CUENTAS(
ID_TITULAR_CUENTA NUMBER(10) NOT NULL,
ID_CUENTA NUMBER(20) NOT NULL,
ID_CLIENTE NUMBER(20) NOT NULL, 
CONSTRAINT BC_TITULARES_CUENTA_PK PRIMARY KEY (ID_CUENTA,ID_CLIENTE)
);
ALTER TABLE BC_TITULARES_CUENTAS ADD (
CONSTRAINT FK_BC_CLIENTES FOREIGN KEY (ID_CLIENTE) REFERENCES BC_CLIENTES(ID_CLIENTE),
CONSTRAINT FK_BC_CUENTAS FOREIGN KEY (ID_CUENTA) REFERENCES  BC_CUENTAS(ID_CUENTA)
);